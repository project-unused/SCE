//SCE V4.0B7.cpp

#include<iostream>
#include<string>
#include<iomanip>
#include"Core.h"
#include"Val.h"
#include"setting_set.h"

//linux 适配
#ifdef _WIN32 // Windows
#define CLS "cls"
#else
#define CLS "clear"
#endif
using namespace std;



void print_main();
void print_res();
void print_val();
void print_set();
void about();
void control_set();
void control_cul();
void control_main();

int main()
{
	val_setting();
	control_main();
}

//实现

void print_main()
{
	system(CLS);
	cout << "SupportCard Evaluator\n";//标题呈现
	cout << "[001] 开始\n[997] 设置\n[998] 关于\n[999] 退出\n";
	if (inputERR == 1)
	{
		cout << "\033[31m 请输入一个正确的数字 \033[0m \n";
		cin.clear(); cin.ignore();
	}
	inputERR = 0;

	cout << "[   ]\b\b\b\b";
}

void print_res()
{
	system(CLS);
	cout << "支援卡类型：" << _show_type <<"     支援卡标识名："<< supportcardname << endl;
	cout << "友情加成：" << fs << "  固有友情：" << sfs << "  干劲加成：" << dr << "\n训练加成：" << tr << "  初始羁绊：" << trap << "  得 意 率：" << gatr
		<< "\n速度加成：" << speed << "  耐力加成：" << stamina << "  力量加成：" << power << "\n根性加成：" << willp << "  智力加成：" << wit << "  S P 加成：" << sp
		<< endl << endl;

	cout<<"基于回合计算评分："<<V4G1umaSCEcore_mainept(type, fs, sfs, dr, tr, trap, gatr, speed, stamina, power, willp, wit, sp) 
	cout << V4G1umaSCEcore_foldept(type, fs, sfs, dr, tr, trap, gatr, speed, stamina, power, willp, wit, sp) 
	cout << V4G1umaSCEcore_spept(type, fs, sfs, dr, tr, trap, gatr, speed, stamina, power, willp, wit, sp) 


}

void print_val()
{
	system(CLS);
	string nametype;
	switch (type)
	{
	case 1:nametype = "速度"; break;
	}

	cout << "[20]类型："<< nametype << endl;
	cout << "[01]友情加成：" << fs << "\n"
		<< "[02]固有友情：" << sfs << "\n"
		<< "[03]干劲加成：" << dr << endl
		<< "[04]训练加成：" << tr << "\n";

	if (set001)
	{
		cout << "{友情倍率：" << (fs * 0.01 + 1) * (sfs * 0.01 + 1) * (dr * 0.002 + 1) * (tr * 0.01 + 1) << "} \n\n";
	}

	cout << "[05]初期羁绊：" << trap << "\n"
		<< "[06]得 意 率：" << gatr << "\n";

	if (set002)
	{
		cout << "{" << 0.2500 << "," << 0.1667 << "," << 0.0083 << "}\n\n";
	}

	cout<< "[07]速度加成：" << speed << "\n"
		 << "[08]耐力加成：" << stamina << "\n"
		 << "[09]力量加成：" << power << endl
		 << "[10]根性加成：" << willp << "\n"
		 << "[11]智力加成：" << wit << "\n"
		 << "[12]S P 加成：" << sp << endl;

	if (set003)
	{
		cout << "{友情训练倍率：" << 1.1145 << "}\n\n";
	}

	if (inputERR == 1)
	{
		cout << "\033[31m 请输入一个正确的数字 \033[0m \n\n";
	}
	inputERR = 0;

	cout << "[999]开始计算   [000]返回主界面\n";
	cout << "[   ]\b\b\b\b";

}
void print_set()
{
	system(CLS);
	cout << "[001]友情倍率  " << "{";
	if (set001)
	{
		cout << "开";		
		cout << "}\n";
		cout << "  \033[90m [04]训练加成：10\n   {友情倍率：1.5444}\n   [05]初期羁绊：25\n\n\033[0m";
	}
	else
	{
		cout << "关";
		cout << "}\n\n";
	}

	cout << "[002]友情训练倍率  " << "{";
	if (set002)
	{
		cout << "开";
		cout << "}\n";
		cout << "  \033[90m [12]S P 加成：10\n   {友情训练倍率：1.6988}\n\n \033[0m";
	}
	else
	{
		cout << "关";
		cout << "}\n\n";
	}

	cout << "[003]真实得意率显示  " << "{";
	if (set003)
	{
		cout << "开";
		cout << "}\n";
		cout << "  \033[90m [06]得 意 率：50\n   {0.2500,0.1667,0.0833}\n\n \033[0m";
	}
	else
	{
		cout << "关";
		cout << "}\n\n";
	}

	cout << "[004]支援卡信息保存  " << "{";
	if (set004)
	{
		cout << "每次询问";
		cout << "}\n\n";
	}
	else
	{
		cout << "每次不询问";
		cout << "}\n\n";
	}

	cout << "[005]评分展示格式  " << "{";
	if (set005)
	{
		cout << "( mainept + foldept + spept )";
		cout << "}\n";
		cout << "  \033[90m 支援卡评分 ( 1863 + 1774 + 3715 )\n\n \033[0m";
	}
	else
	{
		cout << "( mainept + spept + foldept )";
		cout << "}\n";
		cout << "  \033[90m 支援卡评分 ( 1863 + 3715 + 1774 )\n\n\033[0m";
	}

	cout << "[999]实验性功能  " << "{";
	if (set999)
	{
		cout << "开";
		cout << "}\n";

		cout << "     [998]在V4评分旁展示V3评分  " << "{";
		if (set998)
		{
			cout << "开";
			cout << "}\n";
			cout << "      \033[90m 支援卡评分 ( 1863 + 1774 + 3715 )\n       V3评分 (3591)\n\n \033[0m";
		}
		else
		{
			cout << "关";
			cout << "}\033[0m\n\n";
		}
	}
	else
	{
		cout << "关";
		cout << "}\033[0m\n\n";
	}

	cout << "[000]返回主界面\n";

	if (inputERR == 1)
	{
		cin.clear();
		cin.ignore();
		cout << "\033[31m 请输入一个正确的数字 \033[0m \n";
	}
	inputERR = 0;

	cout << "[   ]\b\b\b\b";
}


void about()
{
	system("cat ./about.txt");
}

void control_set()
{
	print_set();
	int num;
	cin >> num;
	switch (num)
	{
	case 1:if (set001)set001 = write_setting("set001", 0); else set001 = write_setting("set001", 1);control_set();break;
	case 2:if (set002)set002 = write_setting("set002", 0); else set002 = write_setting("set002", 1); control_set();break;
	case 3:if (set003)set003 = write_setting("set003", 0); else set003 = write_setting("set003", 1); control_set();break;
	case 4:if (set004)set004 = write_setting("set004", 0); else set004 = write_setting("set004", 1); control_set();break;
	case 5:if (set005)set005 = write_setting("set005", 0); else set005 = write_setting("set005", 1); control_set();break;
	case 999:if (set999)set999 = write_setting("set999", 0); else set999 = write_setting("set999", 1); control_set();break;
	case 998:if (set998)set998 = write_setting("set998", 0); else set998 = write_setting("set998", 1); control_set();break;
	case 0:control_main(); break;
	default:inputERR = 1; control_set();

	}
}

void control_cul()
{
	print_val();
	int num;
	cin >> num;
	switch (num)
	{
	case 100:

		cin.ignore();
		if (type == 1) 
		{
			_show_type = "速度";
		}
		else if (type==2)
		{
			_show_type = "力量";
		}
		cout << "当前属性：" << _show_type << "   修改属性：[   ]\b\b\b\b";


		cin >> type;
		control_cul();
		break;

	case 1:
		    
		cin.ignore();

		cout << "当前属性：" << fs << "   修改属性：[   ]\b\b\b\b";
		cin >> fs;
		control_cul();
		break;

	case 2:
		    
		cin.ignore();
		cout << "当前属性：" << sfs << "   修改属性：[   ]\b\b\b\b";
		cin >> sfs;
		control_cul();
		break;

	case 3:
		    
		cin.ignore();
		cout << "当前属性：" << dr << "   修改属性：[   ]\b\b\b\b";
		cin >> dr;
		control_cul();
		break;

	case 4:
		    
		cin.ignore();
		cout << "当前属性：" << tr << "   修改属性：[   ]\b\b\b\b";
		cin >> tr;
		control_cul();
		break;

	case 5:
		    
		cin.ignore();
		cout << "当前属性：" << trap << "   修改属性：[   ]\b\b\b\b";
		cin >> trap;
		control_cul();
		break;

	case 6:
		    
		cin.ignore();
		cout << "当前属性：" << gatr << "   修改属性：[   ]\b\b\b\b";
		cin >> gatr;
		control_cul();
		break;

	case 7:
		    
		cin.ignore();
		cout << "当前属性：" << speed << "   修改属性：[   ]\b\b\b\b";
		cin >> speed;
		control_cul();
		break;

	case 8:
		    
		cin.ignore();
		cout << "当前属性：" << stamina << "   修改属性：[   ]\b\b\b\b";
		cin >> stamina;
		control_cul();
		break;

	case 9:
		    
		cin.ignore();
		cout << "当前属性：" << power << "   修改属性：[   ]\b\b\b\b";
		cin >> power;
		control_cul();
		break;

	case 10:
		    
		cin.ignore();
		cout << "当前属性：" << willp << "   修改属性：[   ]\b\b\b\b";
		cin >> willp;
		control_cul();
		break;

	case 11:
		    
		cin.ignore();
		cout << "当前属性：" << wit << "   修改属性：[   ]\b\b\b\b";
		cin >> wit;
		control_cul();
		break;

	case 12:
		    
		cin.ignore();
		cout << "当前属性：" << sp << "   修改属性：[   ]\b\b\b\b";
		cin >> sp;
		control_cul();
		break;

	case 999:
	{
		print_res();
		cin.get();
			break;
	}
	case 0:
	{
		control_main(); break;
	}
	default:
		inputERR = 1; control_cul();	
	}

}
void control_main()
{
	print_main();
	int num;
	cin >> num;
	cin.ignore();
	switch (num)
	{
	case 49:control_cul(); break;
	case 001:control_cul(); break;
	case 997:system(CLS); control_set(); break;
	case 998:system(CLS); about(); break;
	case 999:exit(0);
	default:inputERR = 1; control_main();
	}
}